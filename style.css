@keyframes zoom-in {
  0% {
    transform: translateZ(-1000px);
    opacity: 0;
    visibility: hidden;
    filter: blur(5px);
  }
  50% {
    transform: translateZ(0px);
    opacity: 1;
    visibility: visible;
    filter: blur(0px);
  }
  100% {
    transform: translateZ(1000px);
    opacity: 0;
    visibility: hidden;
    filter: blur(5px);
  }
}

.stuck-grid {
  block-size: 100svh;
  perspective: 1000px;
  transform-style: preserve-3d;

  display: grid;
  grid: repeat(4, 25dvh) / repeat(4, 25dvw);
  place-items: center;

  position: sticky;
  top: 0;

  overflow: clip;
}

.stuck-grid > .grid-item {
  transform-style: preserve-3d;

  font-size: 5vmin;
  font-weight: lighter;

  text-wrap: nowrap;
  opacity: 0; /* Fallback for opacity */
  visibility: hidden; /* Ensures that elements are hidden initially */
}

.stuck-grid > .grid-item.special.special {
  grid-row: 2 / span 2;
  grid-column: 2 / span 2;
}

.stuck-grid > .grid-item > b {
  font-size: 15vmin;
}

.stuck-grid > .grid-item:nth-of-type(1) {
  animation: zoom-in 1.5s ease-in-out infinite;
  animation-delay: 0s;
  grid-area: 1 / 1;
}

.stuck-grid > .grid-item:nth-of-type(2) {
  animation: zoom-in 1.5s ease-in-out infinite;
  animation-delay: 0.2s;
  grid-area: 1 / 2;
}

.stuck-grid > .grid-item:nth-of-type(3) {
  animation: zoom-in 1.5s ease-in-out infinite;
  animation-delay: 0.4s;
  grid-area: 1 / 3;
}

.stuck-grid > .grid-item:nth-of-type(4) {
  animation: zoom-in 1.5s ease-in-out infinite;
  animation-delay: 0.6s;
  grid-area: 1 / 4;
}

.stuck-grid > .grid-item:nth-of-type(5) {
  animation: zoom-in 1.5s ease-in-out infinite;
  animation-delay: 0.8s;
  grid-area: 2 / 1;
}

.stuck-grid > .grid-item:nth-of-type(6) {
  animation: zoom-in 1.5s ease-in-out infinite;
  animation-delay: 1s;
  grid-area: 2 / 2;
}

.stuck-grid > .grid-item:nth-of-type(7) {
  animation: zoom-in 1.5s ease-in-out infinite;
  animation-delay: 1.2s;
  grid-area: 2 / 3;
}

.stuck-grid > .grid-item:nth-of-type(8) {
  animation: zoom-in 1.5s ease-in-out infinite;
  animation-delay: 1.4s;
  grid-area: 2 / 4;
}

/* Melanjutkan untuk elemen-elemen lainnya */

@layer support {
  * {
    box-sizing: border-box;
    margin: 0;
  }

  html {
    block-size: 100%;
    color-scheme: dark light;
  }

  body {
    min-block-size: 400vh;
    font-family: system-ui, sans-serif;
  }
}

@supports (animation-timeline: scroll()) {
  @media (prefers-reduced-motion: no-preference) {
    .stuck-grid > .grid-item {
      animation: zoom-in 1.5s ease-in-out infinite;
      animation-timeline: scroll(root block);
      will-change: transform, opacity, filter, visibility;
    }
  }
}
